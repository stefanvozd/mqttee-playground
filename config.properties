mqtt_broker=tcp://localhost:1883
mqtt_clientid=MyGroup/TestClient1
mqtt_clear_session=true

##The Last Will and Testament (LWT) feature is used in MQTT to notify other clients about an ungracefully disconnected client. Each client can specify its last will message 
##(a normal MQTT message with topic, retained flag, QoS and payload) when connecting to a broker. The broker will store the message until it detects that the client has disconnected ungracefully. 
##If the client disconnect abruptly, the broker sends the message to all subscribed clients on the topic, which was specified in the last will message.
##The stored LWT message will be discarded if a client disconnects gracefully by sending a DISCONNECT message.
mqtt_lwt_topic=test/dead
mqtt_lwt_msg=test/dead
mqtt_lwt_qos=1

##The keepalive timeout value is set by the client when it connects. A typical value might be 60 (seconds). This means that the MQTT client is expected to send an MQTT packet at least once every 60 seconds. If no other
##packet is sent, then a PINGREQ can be used, to which a response is expected (PINGRESP). The intention is to discover "dead" TCP connections, which can, under certain circumstances, accept writes for some time after 
##the connection has been broken.
##If the server does not receive an MQTT packet from the client at least every keepalive interval (plus some grace period, often 150%), then the server will close the TCP connection, for good. This means that the client
##has to reconnect. If the client does not receive the PINGRESP from the server within some amount of time (often 150% of the keepalive interval again), the client library will close the TCP connection for good, with the same 
##effect - the client application has to reconnect.
##If the keep alive interval is set to 0, the keep alive mechanism is deactivated.
mqtt_keepalive=30

configurabile_topic=root/razno

#username and password for broker
mqtt_username=
mqtt_password=